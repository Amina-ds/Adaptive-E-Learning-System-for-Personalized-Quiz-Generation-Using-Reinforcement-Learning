Идея диссертации: Адаптивная система электронного обучения для персонализированной генерации тестов с использованием обучения с подкреплением и генеративных моделей

1. Проблема исследования
Традиционные платформы электронного обучения используют статические или простые эвристические тесты. Они не могут адаптироваться к текущему уровню знаний студента. В результате тесты оказываются слишком лёгкими или слишком сложными, что снижает мотивацию и эффективность обучения. Существует разрыв в методах, которые объединяют адаптивное обучение и автоматическую генерацию вопросов.

2. Цель
Разработать и реализовать адаптивную систему электронного обучения, которая будет генерировать персонализированные тестовые задания для каждого студента. Система должна использовать обучение с подкреплением (RL) для выбора сложности, темы и времени подачи вопроса, а также дообученную языковую модель (T5/Flan-T5) для генерации самих вопросов.

Как я буду делать проект:
1. Сбор учебных материалов
   - Беру тексты, примеры задач и формулы по выбранной предметной области.
   - Эти материалы будут использоваться как база знаний для генерации вопросов.

2. Генерация вопросов онлайн
   - Использую языковую модель Flan-T5.
   - Провожу дообучение (fine-tuning), чтобы она умела создавать:
     • multiple-choice questions (MCQ) — вопрос + 4 варианта, один правильный,
     • вопросы с открытым ответом — где студент должен сам написать решение.
   - Вопросы генерируются динамически после каждого ответа студента.

3. Проверка качества вопросов
   - Вопросы проходят автоматическую проверку:
     • корректность формата (MCQ должен содержать ровно один правильный вариант),
     • для открытых вопросов — правильность решения через автоматический решатель (например, SymPy для математики),
     • классификация сложности (лёгкий, средний, сложный),
     • проверка на ясность и отсутствие ошибок.

4. Профиль студента
   - Для каждого студента ведётся профиль знаний:
     • по каким темам он сильный, где допускает ошибки,
     • насколько быстро отвечает,
     • где справляется с открытыми задачами, а где только с выбором ответа.
   - Профиль обновляется после каждого нового ответа.

5. Применение Reinforcement Learning
   - RL-агент получает текущее состояние (профиль студента).
   - Агент выбирает действие: какую тему, уровень сложности и формат (MCQ или открытый ответ) сгенерировать.
   - Flan-T5 генерирует новый вопрос по этим параметрам.
   - Если студент справился с вопросом подходящей сложности → награда положительная.
   - Если вопрос оказался слишком лёгким или слишком трудным → награда отрицательная.
   - Если студент показал прогресс (например, решил открытую задачу после серии MCQ) → дополнительная награда.
   - Таким образом, агент учится подбирать вопросы, учитывая способности студента и его стиль ответа.

6. Интерфейс
   - Разрабатываю веб-приложение, где студент отвечает на MCQ и открытые вопросы.
   - Система сразу показывает правильный ответ или пошаговое решение.
   - Все ответы сохраняются и используются для адаптации.

7. Проверка эффективности
   - Сравниваю две группы:
     • первая решает обычные статические тесты,
     • вторая — адаптивные тесты с RL и динамической генерацией (MCQ + открытый ответ).
   - Сравниваю прогресс: скорость усвоения материала, вовлечённость, качество знаний.
